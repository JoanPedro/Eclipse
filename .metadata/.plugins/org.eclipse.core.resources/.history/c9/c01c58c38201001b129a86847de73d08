package streams;

import java.util.Arrays;
import java.util.List;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;

import lambdas.NumberUtil;

public class DesafioMap {
	public static void main(String[] args) {
		List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
		Consumer<Integer> println = System.out::println;
		Consumer<String> print = System.out::println;
		/*
		 * 1. Número para string binária... 6 => "110"; 2. Inverter a string... "110" =>
		 * "011"; 3. Converter de volta para inteiro => "011" => 3
		 */
		
		System.out.println("1 Stream");
		numbers.stream().map(NumberUtil.integerToBinary).map(NumberUtil.invertString).map(NumberUtil.binaryToInteger)
				.forEach(println);
		
		System.out.println("Foreach");
		numbers.forEach(n -> System.out.println(n));
		
		System.out.println("2 Stream");
		numbers.stream().forEach(n -> System.out.println(n));
	}
}
